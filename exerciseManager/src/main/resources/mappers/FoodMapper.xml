<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.multi.diet.IFoodDAO">
	
	<!-- 전체 내용 조회 -->
	<select id="getList" resultType="com.multi.diet.FoodVO">
 		 SELECT * FROM food
	</select>
	
	<!-- 상세조회 -->
	<select id="getDetail" resultType="com.multi.diet.FoodVO">
  		SELECT * FROM food WHERE fCode = #{fCode}
	</select>
	
	
	<!-- 총 갯수 출력 -->
	<select id="countFood" resultType="int">
		SELECT COUNT(*) FROM food
	</select>
 
	<!-- 페이징 처리 후 조회 -->
	<select id="selectFood" resultType="com.multi.diet.FoodVO">
		SELECT * 
			FROM (
				SELECT ROWNUM RN, A.* 
					FROM (
							SELECT * 
							FROM food 
							ORDER BY fCode
							) A
					)
		WHERE RN BETWEEN #{start} AND #{end}
		
		
	</select>
	
	
	
	<!-- 검색 -->
	 <!-- rownum을 rn이란 문자로 줄여쓴다. 밑에 from문을 A로 줄여쓴다.  -->
                  <!-- 이 from문이 먼저 실행된 다음에 번호를 붙였기 때문에 일련번호가 다시 새로 매겨졌다. -->
                <!--  이 안쪽의 쿼리가 가장 중요함 -->
                
                
	<select id="listAll" resultType="com.multi.diet.FoodVO">
	<!-- 쿼리의 결과를 출력시키기 위해서 dto 타입으로 반환한다.-->
	        <include refid="paging_header" />  <!-- 밑에 있는 sql문을 include 한다 -->
	        
	        <!-- ref는 다른테이블을 의미한다. -->
	            select *         
	            from food
	            <!-- where절은 (조건)은 include 태그를 이용했음 -->
	
	        <include refid="search" />
	            order by fCode
	        <include refid="paging_footer" />        
	    </select>
	    
	    
	    <sql id="paging_header">
	<!-- 식품을 한페이지에 10개씩 볼 수 있게하는 쿼리 윗부분-->
	        select *
	        from (
	            select rownum as rn, A.*
	            from (    
	    </sql>
	    
	    
	    
	    <sql id="paging_footer">
		<!-- 식품을 한페이지에 10개씩 볼 수 있게하는 쿼리  아랫 부분-->
	    <!-- 새로 매겨진 일련번호 1~10번 글까지 1페이지 -->
	    <!-- 11~20번 글까지 2페이지.. -->
	            ) A
	        ) where rn between #{start} and #{end}    
	    </sql>
	    
	    
	 
	    
	<sql id="search">
			<choose>
	          <!--식품코드 , 식품명, 분류로 각각 검색할 수 있게끔 한다.-->
	            <when test="search_option == 'all' ">
	                where  
	                      fCode like '%'||#{keyword}||'%'
	                      or fName like '%' || #{keyword}||'%'
	                      or f_category like '%'||#{keyword}||'%'   
	            </when>
	            <otherwise>
	             
	             <!--  식품코드 + 식품명 + 분류를 포함한 항목을 검색할 수 있게끔 한다. -->
	                where ${search_option} like '%'||#{keyword}||'%'
	            </otherwise>
	        </choose>
    </sql>

	
</mapper> 