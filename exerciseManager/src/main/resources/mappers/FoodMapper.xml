<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.multi.diet.IFoodDAO">
	
	<!-- 전체 내용 조회 -->
	<select id="getList" resultType="com.multi.diet.FoodVO">
 		 SELECT * FROM food
	</select>
	
	<!-- 상세조회 -->
	<select id="getDetail" resultType="com.multi.diet.FoodVO">
  		SELECT * FROM food WHERE fCode = #{fCode}
	</select>
	
	
	<!-- 총 갯수 출력 -->
	<select id="countFood" resultType="int">
		SELECT COUNT(*) FROM food
	</select>
 
	<!-- 페이징 처리 후 조회 -->
	<select id="selectFood" resultType="com.multi.diet.FoodVO">
		SELECT * 
			FROM (
				SELECT ROWNUM RN, A.* 
					FROM (
							SELECT * 
							FROM food 
							ORDER BY fCode
							) A
					)
		WHERE RN BETWEEN #{start} AND #{end}
		
		
	</select>
	
	
	
	<!-- 검색 -->

	<select id="listAll" resultType="com.multi.diet.FoodVO">
	<!-- 쿼리의 결과를 출력시키기 위해서 dto 타입으로 반환한다.-->
	            SELECT *         
	            FROM food	
	        <include refid="search" />
	       
	            ORDER BY fCode
	        	LIMIT #{start}, #{end}
	       
	</select>
	    
	 
	    
	<sql id="search">
			<choose>
	          <!--식품코드 , 식품명, 분류로 각각 검색할 수 있게끔 한다.-->
	            <when test="search_option == 'all' ">
	                WHERE  
	                      fCode LIKE CONCAT('%',#{keyword},'%')
	                      OR fName LIKE CONCAT('%',#{keyword},'%')
	                      OR f_category LIKE CONCAT('%',#{keyword},'%')   
	            </when>
	            <otherwise>
	             
	             <!--  식품코드 + 식품명 + 분류를 포함한 항목을 검색할 수 있게끔 한다. -->
	                WHERE ${search_option} LIKE CONCAT('%',#{keyword},'%')
	            </otherwise>
	        </choose>
    </sql>

	
</mapper> 